unit Controller.Cliente;

interface

uses Horse, System.JSON, System.SysUtils, Model.Cliente, FireDAC.Comp.Client,
     Data.DB, DataSet.Serialize;

procedure Registry;

implementation

procedure ListarClientes(Req: THorseRequest; Res: THorseResponse);
var
  cliente: TCliente;
  query: TFDQuery;
  erro: String;
  arrayClientes: TJSONArray;
  begin
    try
      cliente := TCliente.Create;
    except
      res.Send('Erro ao conectar com o banco').Status(500);
      Exit;
    end;

    try
      query := cliente.ListarCliente('', erro);

      arrayClientes := query.ToJSONArray();

      res.Send(arrayClientes)
    finally
      query.Free;
      cliente.Free;
    end;
  end;

procedure AddClientes(Req: THorseRequest; Res: THorseResponse);
  begin
    Res.Send('Adicionar Clientes...');
  end;

procedure DeleteClientes(Req: THorseRequest; Res: THorseResponse);
  begin
    Res.Send('Deletar Clientes...');
  end;

procedure Registry;
begin
  THorse.Get('/cliente', ListarClientes);
  THorse.Post('/cliente', AddClientes);
  THorse.Delete('/cliente', DeleteClientes);
end;

end.
